apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
  - port: 5432
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-demo
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: sa-secret
                key: POSTGRES_DATABASE
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sa-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: sa-secret
                key: POSTGRES_USERNAME
        ports:
        - containerPort: 5432
          name: postgredb
        volumeMounts:
        - name: postgredb
          mountPath: /var/lib/postgresql/data
          subPath: postgres
  volumeClaimTemplates:
  - metadata:
      name: postgredb
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hits
  labels:
    app: hits
spec:
  replicas: 3
  selector:
    matchLabels:
      name: hits
  template:
    metadata:
      labels:
        name: hits
    spec:
      containers:
        - name: api
          image: akali/hits
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 10
          env:
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: sa-secret
                  key: POSTGRES_DATABASE
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sa-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sa-secret
                  key: POSTGRES_USERNAME


---
apiVersion: v1
kind: Service
metadata:
  name: hits
spec:
  ports:
    - port: 8000
  selector:
    name: hits
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hits
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: hits.count
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hits
            port:
              number: 8000
